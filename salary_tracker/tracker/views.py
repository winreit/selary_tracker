from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from django.utils import timezone
from django.db.models import Sum
from .models import WorkType, Work, MonthlyTotal
import datetime


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤ —Ä–∞–±–æ—Ç
def initialize_work_types():
    TYPES_RABOT = {
        '–¥–æ–ø–ª–∞—Ç–∞': 363,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞': 94,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä': 1212,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–∞—Ä–∫–∞': 1446,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–ø': 556,
        '–∫—Ä–æ—Å—Å–∏—Ä–æ–≤–∫–∞': 550,
        '–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ': 293,
        '–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç—å': 439,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–≤': 176,
        '–¥–æ—Å—Ç–∞–≤–∫–∞ —Å–∏–º–∫–∞—Ä—Ç—ã': 410,
        '–¥–µ–º–æ–Ω—Ç–∞–∂ –æ–Ω—Ç': 105,
        '–¥–µ–º–æ–Ω—Ç–∞–∂ –ø—Ä–æ—á–∏—Ö': 76,
        '–∑–∞–º–µ–Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è': 299,
        '–∫–∞–º–µ—Ä–∞': 158,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–±–µ–ª—å –ø—Ä–æ–ª–æ–∂–µ–Ω': 492,
        '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞': 82
    }

    for name, price in TYPES_RABOT.items():
        WorkType.objects.get_or_create(name=name, defaults={'price': price})


# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@login_required
def dashboard(request):
    initialize_work_types()

    now = timezone.now()
    month_total = Work.objects.filter(
        user=request.user,
        month=now.month,
        year=now.year
    ).aggregate(total=Sum('work_type__price'))['total'] or 0

    all_time_total = get_all_time_total(request.user)
    last_works = Work.objects.filter(user=request.user).order_by('-date')[:5]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Ä–∞–±–æ—Ç

    context = {
        'month_total': month_total,
        'all_time_total': all_time_total,
        'last_works': last_works,  # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    }
    return render(request, 'tracker/dashboard.html', context)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
@login_required
def add_work(request):
    if request.method == 'POST':
        work_type_id = request.POST.get('work_type')
        work_number = request.POST.get('work_number')
        work_type = WorkType.objects.get(id=work_type_id)

        now = timezone.now()
        Work.objects.create(
            user=request.user,
            work_type=work_type,
            work_number=work_number,
            month=now.month,
            year=now.year
        )

        messages.success(request, f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {work_type.name} - {work_type.price} —Ä—É–±.')
        return redirect('dashboard')

    work_types = WorkType.objects.all()
    return render(request, 'tracker/add_work.html', {'work_types': work_types})


# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã
@login_required
def delete_last_work(request):
    last_work = Work.objects.filter(user=request.user).order_by('-date').first()

    if last_work:
        work_type_name = last_work.work_type.name
        price = last_work.work_type.price
        last_work.delete()
        messages.warning(request, f'‚ùå –£–¥–∞–ª–µ–Ω–æ: {work_type_name} - {price} —Ä—É–±.')
    else:
        messages.warning(request, '‚ùå –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å')

    return redirect('dashboard')


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞
@login_required
def save_month(request):
    now = timezone.now()
    works = Work.objects.filter(
        user=request.user,
        month=now.month,
        year=now.year
    )

    total = works.aggregate(total=Sum('work_type__price'))['total'] or 0

    if total > 0:
        MonthlyTotal.objects.create(
            user=request.user,
            month=now.month,
            year=now.year,
            total=total
        )
        works.delete()
        messages.success(request, f'üíæ –ú–µ—Å—è—Ü —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –°—É–º–º–∞: {total} —Ä—É–±.')
    else:
        messages.warning(request, '‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü')

    return redirect('dashboard')


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü
@login_required
def month_stats(request):
    now = timezone.now()
    month_total = Work.objects.filter(
        user=request.user,
        month=now.month,
        year=now.year
    ).aggregate(total=Sum('work_type__price'))['total'] or 0

    context = {
        'month_total': month_total,
        'current_month': now.month,
        'current_year': now.year,
    }
    return render(request, 'tracker/month_stats.html', context)


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
@login_required
def all_time_stats(request):
    all_time_total = get_all_time_total(request.user)
    monthly_totals = MonthlyTotal.objects.filter(user=request.user).order_by('-year', '-month')

    context = {
        'all_time_total': all_time_total,
        'monthly_totals': monthly_totals,
    }
    return render(request, 'tracker/all_time_stats.html', context)


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã
def get_all_time_total(user):
    works_total = Work.objects.filter(user=user).aggregate(
        total=Sum('work_type__price')
    )['total'] or 0

    monthly_total = MonthlyTotal.objects.filter(user=user).aggregate(
        total=Sum('total')
    )['total'] or 0

    return works_total + monthly_total